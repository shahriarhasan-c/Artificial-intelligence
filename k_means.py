# -*- coding: utf-8 -*-
"""k-means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fvRVBTftjxONghpJ6m_SeXlr2_u50VpB
"""

from google.colab import drive
drive.mount('/content/gdrive')

from numpy import genfromtxt
data = '/content/gdrive/MyDrive/data.csv'
data = genfromtxt(data, delimiter=',')
centers = '/content/gdrive/MyDrive/centers.csv'
centers = genfromtxt(centers, delimiter=',')

type(data)
type(centers)

for i in range(5):
  print(centers[i])
type(centers)

import numpy as np
import matplotlib.pyplot as plt



def distance(a, b):
    return np.sqrt(np.sum(np.square(a - b)))



def average_dist(index):
    temp = [data[i] for i in index]

    xAvg = 0
    yAvg = 0

    for i in temp:
        xAvg += np.sum(i[0])
        yAvg += np.sum(i[1])

    xAvg /= len(temp)
    yAvg /= len(temp)
    
    return xAvg, yAvg



def find_cluster(item, list):

    for i in range(len(list)):
        if item in list[i]:
            return i



clusters = [[] for i in range(6)]
temp_clusters = [[] for i in range(6)]
itr = 0
shift = 0

while True:
    for i, s in enumerate(data):
        dist = []
        for c in centers:
            dist.append(distance(s, c))
        min_dist = min(dist)
        position = (dist).index(min_dist)
        temp_clusters[position].append(i)

    for i, l in enumerate(temp_clusters):
        xAvg, yAvg = average_dist(l)
        centers[i] = [xAvg, yAvg]
        centers = np.asarray(centers)

    itr += 1

    if itr > 1:
        shift = 0
        for i in range(len(data)):
            if find_cluster(i, clusters) != find_cluster(i, temp_clusters):
                shift += 1

        if shift < 10:
            clusters = temp_clusters
            break
    clusters = temp_clusters



centers = np.asarray(centers)
clrs = ['seagreen', 'darkorchid', 'crimson', 'teal', 'coral', 'goldenrod']

for i in range(len(clusters)):
    for c in clusters[i]:
        plt.scatter(data[c, 0], data[c, 1], c=clrs[i], s=10)


plt.scatter(centers[:, 0], centers[:, 1], s=100,
            c=clrs, alpha=1, marker='H', edgecolors='k', linewidth=2)

plt.title('011181038')
plt.xlabel('→ X')
plt.ylabel('→ Y')
plt.show()